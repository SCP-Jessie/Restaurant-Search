{"version":3,"sources":["components/NavBar.js","components/Articles.js","components/ArticlesList.js","components/App/App.js","serviceWorker.js","index.js"],"names":["NavBar","AppBar","position","Toolbar","Typography","variant","color","Articles","props","console","log","article","Card","CardMedia","style","height","paddingTop","image","urlToImage","title","CardContent","gutterBottom","component","source","name","description","publishedAt","CardActions","Button","size","href","url","target","apiKey","ArticlesList","state","articles","searchString","searchCategory","alignment","getArticles","text","category","param","URLSearchParams","q","fetch","then","response","json","jsonResponse","setState","catch","error","onSearchInputChange","event","currentTarget","value","onCategoryChange","handleAlignment","newAlignment","this","ToggleButtonGroup","exclusive","onChange","aria-label","justifyContent","ToggleButton","onClick","TextField","id","placeholder","margin","Grid","container","spacing","padding","map","currentArticle","item","xs","sm","lg","xl","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ee64f5e7.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nconst NavBar = () => {\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"title\" color=\"inherit\">\r\n                        Top Global News\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;","import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nconst Articles = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n            { props.article ? (\r\n                <Card >\r\n                    <CardMedia style={{ height: 0, paddingTop: '56.25%' }}\r\n                        image={props.article.urlToImage}\r\n                        title={props.article.title}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"headline\" component=\"h2\">\r\n                            {props.article.title}\r\n                        </Typography>\r\n\r\n                        <Typography gutterBottom variant=\"body2\" component=\"h2\">\r\n                            {props.article.source.name}\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                            {props.article.description}\r\n                        </Typography>\r\n                        <Typography gutterBottom component=\"h2\" color=\"textSecondary\">\r\n                            {props.article.publishedAt}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button size=\"small\" color=\"primary\" href={props.article.url} target=\"_blank\">\r\n                            View Full Article\r\n                    </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\nexport default Articles;","import React, { Component } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Articles from './Articles'\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\n\r\nconst apiKey = '78b9d599c4f94f8fa3afb1a5458928d6';\r\n\r\nclass ArticlesList extends Component {\r\n\r\n    state = {\r\n        articles: [],\r\n        searchString: '',\r\n        searchCategory: '',\r\n        alignment: ''\r\n    }\r\n    constructor() {\r\n        super()\r\n        this.getArticles()\r\n    }\r\n    getArticles = (text, category) => {\r\n        var searchString = this.state.searchString;\r\n        var searchCategory = this.state.searchCategory;\r\n\r\n        if (text == null) {\r\n            searchCategory = category;\r\n        }\r\n        if (category == null) {\r\n            searchString = text;\r\n        }\r\n\r\n        var param = new URLSearchParams({\r\n            q: searchString,\r\n            category: searchCategory,\r\n            apiKey\r\n        });\r\n\r\n        if (searchString == '' && searchCategory == '') {\r\n            param = new URLSearchParams({\r\n                apiKey\r\n            });\r\n        }\r\n        else if (searchCategory == '') {\r\n            param = new URLSearchParams({\r\n                q: searchString,\r\n                apiKey\r\n            });\r\n        }\r\n        else if (searchString == '') {\r\n            param = new URLSearchParams({\r\n                category: searchCategory,\r\n                apiKey\r\n            });\r\n        }\r\n        console.log(\"Param: \" + param);\r\n\r\n        fetch('https://newsapi.org/v2/top-headlines?' + param)\r\n            .then(response => response.json())\r\n            .then((jsonResponse) => {\r\n                console.log(jsonResponse.articles);\r\n                if (jsonResponse.articles) {\r\n                    this.setState({ articles: jsonResponse.articles });\r\n                }\r\n            }).catch((error) => {\r\n                console.log(\"Error occurred while fetching Entries\")\r\n                console.error(error)\r\n            })\r\n    }\r\n    onSearchInputChange = (event) => {\r\n        console.log(event.currentTarget.value)\r\n\r\n        if (event.currentTarget.value) {\r\n            this.setState({ searchString: event.currentTarget.value })\r\n        } else {\r\n            this.setState({ searchString: '' })\r\n        }\r\n        this.getArticles(event.currentTarget.value, null)\r\n    }\r\n\r\n    onCategoryChange = (event) => {\r\n        if (event.currentTarget.value) {\r\n            console.log(event.currentTarget.value)\r\n\r\n            this.setState({ searchCategory: event.currentTarget.value });\r\n\r\n        } else {\r\n            this.setState({ searchCategory: '' })\r\n        }\r\n        this.getArticles(null, event.currentTarget.value)\r\n    }\r\n\r\n    handleAlignment = (event, newAlignment) => {\r\n        this.setState(\r\n            {\r\n                alignment: newAlignment\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.state.articles ? (\r\n                    <div>\r\n                        <ToggleButtonGroup value={this.state.alignment} exclusive onChange={this.handleAlignment} variant=\"text\" color=\"primary\" aria-label=\"text primary button group \" style={{ justifyContent: 'center' }}>\r\n                            <ToggleButton onClick={this.onCategoryChange} value='business'>Business</ToggleButton>\r\n                            <ToggleButton onClick={this.onCategoryChange} value='entertainment'>Entertainment</ToggleButton>\r\n                            <ToggleButton onClick={this.onCategoryChange} value='general'>General</ToggleButton>\r\n                            <ToggleButton onClick={this.onCategoryChange} value='health'>Health</ToggleButton>\r\n                            <ToggleButton onClick={this.onCategoryChange} value='science'>Science</ToggleButton>\r\n                            <ToggleButton onClick={this.onCategoryChange} value='sports'>Sports</ToggleButton>\r\n                            <ToggleButton onClick={this.onCategoryChange} value='technology'>Technology</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n\r\n                        <TextField style={{ padding: 24 }, { justifyContent: 'right' }}\r\n                            id=\"searchInput\"\r\n                            placeholder=\"Search for News Articles\"\r\n                            margin=\"normal\"\r\n                            onChange={this.onSearchInputChange}\r\n                        />\r\n                        <Grid container spacing={4} style={{ padding: 24 }}>\r\n                            {this.state.articles.map(currentArticle => (\r\n                                <Grid item xs={12} sm={6} lg={4} xl={3}>\r\n                                    <Articles article={currentArticle} />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </div>\r\n                ) : \"No articles found\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ArticlesList;","import React, { Component } from 'react';\nimport NavBar from '../NavBar';\nimport ArticlesList from '../ArticlesList';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <ArticlesList />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}